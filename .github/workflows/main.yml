name: 'Production Release'

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  publish:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      OUTPUT_LATEST: ${{ steps.publish.outputs.latest }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Create lockfile
        run: echo '"Riot Client:1888:12345:6VCDFORUm1nbDfZ4EReVqw:https"' > lockfile.json

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install frontend dependencies
        run: pnpm install

      - name: Generate build timestamp
        id: timestamp
        run: echo "BUILD_TIME=$(date -u +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Update version with timestamp
        run: |
          cd src-tauri
          # Get current version and append timestamp
          CURRENT_VERSION=$(grep '"version"' tauri.conf.json | sed 's/.*"version": "\([^"]*\)".*/\1/')
          NEW_VERSION="${CURRENT_VERSION}.${{ steps.timestamp.outputs.BUILD_TIME }}"
          sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"$NEW_VERSION\"/" tauri.conf.json

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
          VITE_APTABASE_KEY: ${{ secrets.APTABASE_KEY }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'VTJS v__VERSION__'
          releaseBody: |
            Production Release

            Build Time: ${{ steps.timestamp.outputs.BUILD_TIME }}
            Channel: Production

            See the assets to download this version and install.
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

      - name: Update Production Gist
        uses: exuanbo/actions-deploy-gist@v1
        with:
          token: ${{ secrets.TOKEN }}
          gist_id: 0b5f7094000f4063d72276c5e05824aa
          file_path: ./prod.json
